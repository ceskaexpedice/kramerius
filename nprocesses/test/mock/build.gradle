plugins {
    id 'java-library'
	id 'org.ceskaexpedice.processplatform.process' version '1.0.1'
}

/** Process definition */ 
processPlugin {
    pluginName = "mock-plugin"
    profiles = [
        [
           profileId: "mock",
           description: "Mock",
           jvmArgs: ["-Xms1g","-Xmx32g","-Dname=big"]
        ]
    ]
}


tasks.register("generatePluginProperties") {
    def outputDir = layout.buildDirectory.dir("generated/resources/plugin").get().asFile
    outputs.dir(outputDir)

    doLast {
        def file = new File(outputDir, "plugin.properties")
        file.parentFile.mkdirs()

        def props = new Properties()
        props.setProperty("plugin.id", processPlugin.pluginName)
        props.setProperty("plugin.description", "Mock process")
        props.setProperty("plugin.mainClass", "org.ceskaexpedice.kramerius.processes.MockProcess")
        props.setProperty("plugin.scheduledProfiles", "") 

        file.withOutputStream { out ->
            props.store(out, "Generated by Gradle")
        }
    }
}

sourceSets.main.resources.srcDir(tasks.named("generatePluginProperties"))

tasks.named("processResources") {
    dependsOn("generatePluginProperties")
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    annotationProcessor 'com.google.auto.service:auto-service:1.1.1'
    implementation 'com.google.auto.service:auto-service-annotations:1.1.1'
    
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.ceskaexpedice:process-api:1.0-dev'
    api project(':shared:common')

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}