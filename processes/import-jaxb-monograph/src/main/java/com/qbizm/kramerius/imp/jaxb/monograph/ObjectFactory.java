//
// This file was generated by the Eclipse Implementation of JAXB, v2.3.6 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2025.10.02 at 09:48:34 AM CEST 
//


package com.qbizm.kramerius.imp.jaxb.monograph;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.qbizm.kramerius.imp.jaxb.monograph package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.qbizm.kramerius.imp.jaxb.monograph
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Monograph }
     * 
     */
    public Monograph createMonograph() {
        return new Monograph();
    }

    /**
     * Create an instance of {@link UniqueIdentifier }
     * 
     */
    public UniqueIdentifier createUniqueIdentifier() {
        return new UniqueIdentifier();
    }

    /**
     * Create an instance of {@link UniqueIdentifierURNType }
     * 
     */
    public UniqueIdentifierURNType createUniqueIdentifierURNType() {
        return new UniqueIdentifierURNType();
    }

    /**
     * Create an instance of {@link UniqueIdentifierSICIType }
     * 
     */
    public UniqueIdentifierSICIType createUniqueIdentifierSICIType() {
        return new UniqueIdentifierSICIType();
    }

    /**
     * Create an instance of {@link MonographOwner }
     * 
     */
    public MonographOwner createMonographOwner() {
        return new MonographOwner();
    }

    /**
     * Create an instance of {@link Library }
     * 
     */
    public Library createLibrary() {
        return new Library();
    }

    /**
     * Create an instance of {@link ShelfNumber }
     * 
     */
    public ShelfNumber createShelfNumber() {
        return new ShelfNumber();
    }

    /**
     * Create an instance of {@link MonographBibliographicRecord }
     * 
     */
    public MonographBibliographicRecord createMonographBibliographicRecord() {
        return new MonographBibliographicRecord();
    }

    /**
     * Create an instance of {@link Title }
     * 
     */
    public Title createTitle() {
        return new Title();
    }

    /**
     * Create an instance of {@link MainTitle }
     * 
     */
    public MainTitle createMainTitle() {
        return new MainTitle();
    }

    /**
     * Create an instance of {@link SubTitle }
     * 
     */
    public SubTitle createSubTitle() {
        return new SubTitle();
    }

    /**
     * Create an instance of {@link ParallelTitle }
     * 
     */
    public ParallelTitle createParallelTitle() {
        return new ParallelTitle();
    }

    /**
     * Create an instance of {@link Creator }
     * 
     */
    public Creator createCreator() {
        return new Creator();
    }

    /**
     * Create an instance of {@link CreatorSurname }
     * 
     */
    public CreatorSurname createCreatorSurname() {
        return new CreatorSurname();
    }

    /**
     * Create an instance of {@link CreatorName }
     * 
     */
    public CreatorName createCreatorName() {
        return new CreatorName();
    }

    /**
     * Create an instance of {@link Contributor }
     * 
     */
    public Contributor createContributor() {
        return new Contributor();
    }

    /**
     * Create an instance of {@link ContributorSurname }
     * 
     */
    public ContributorSurname createContributorSurname() {
        return new ContributorSurname();
    }

    /**
     * Create an instance of {@link ContributorName }
     * 
     */
    public ContributorName createContributorName() {
        return new ContributorName();
    }

    /**
     * Create an instance of {@link GMD }
     * 
     */
    public GMD createGMD() {
        return new GMD();
    }

    /**
     * Create an instance of {@link Publisher }
     * 
     */
    public Publisher createPublisher() {
        return new Publisher();
    }

    /**
     * Create an instance of {@link PlaceOfPublication }
     * 
     */
    public PlaceOfPublication createPlaceOfPublication() {
        return new PlaceOfPublication();
    }

    /**
     * Create an instance of {@link PublisherName }
     * 
     */
    public PublisherName createPublisherName() {
        return new PublisherName();
    }

    /**
     * Create an instance of {@link DateOfPublication }
     * 
     */
    public DateOfPublication createDateOfPublication() {
        return new DateOfPublication();
    }

    /**
     * Create an instance of {@link Printer }
     * 
     */
    public Printer createPrinter() {
        return new Printer();
    }

    /**
     * Create an instance of {@link PlaceOfPrinting }
     * 
     */
    public PlaceOfPrinting createPlaceOfPrinting() {
        return new PlaceOfPrinting();
    }

    /**
     * Create an instance of {@link PrinterName }
     * 
     */
    public PrinterName createPrinterName() {
        return new PrinterName();
    }

    /**
     * Create an instance of {@link DateOfPrinting }
     * 
     */
    public DateOfPrinting createDateOfPrinting() {
        return new DateOfPrinting();
    }

    /**
     * Create an instance of {@link PhysicalDescription }
     * 
     */
    public PhysicalDescription createPhysicalDescription() {
        return new PhysicalDescription();
    }

    /**
     * Create an instance of {@link Size }
     * 
     */
    public Size createSize() {
        return new Size();
    }

    /**
     * Create an instance of {@link Extent }
     * 
     */
    public Extent createExtent() {
        return new Extent();
    }

    /**
     * Create an instance of {@link Scale }
     * 
     */
    public Scale createScale() {
        return new Scale();
    }

    /**
     * Create an instance of {@link Technique }
     * 
     */
    public Technique createTechnique() {
        return new Technique();
    }

    /**
     * Create an instance of {@link Material }
     * 
     */
    public Material createMaterial() {
        return new Material();
    }

    /**
     * Create an instance of {@link PreservationStatus }
     * 
     */
    public PreservationStatus createPreservationStatus() {
        return new PreservationStatus();
    }

    /**
     * Create an instance of {@link PreservationStateOfArt }
     * 
     */
    public PreservationStateOfArt createPreservationStateOfArt() {
        return new PreservationStateOfArt();
    }

    /**
     * Create an instance of {@link PreservationTreatment }
     * 
     */
    public PreservationTreatment createPreservationTreatment() {
        return new PreservationTreatment();
    }

    /**
     * Create an instance of {@link ISBN }
     * 
     */
    public ISBN createISBN() {
        return new ISBN();
    }

    /**
     * Create an instance of {@link Series }
     * 
     */
    public Series createSeries() {
        return new Series();
    }

    /**
     * Create an instance of {@link SeriesTitle }
     * 
     */
    public SeriesTitle createSeriesTitle() {
        return new SeriesTitle();
    }

    /**
     * Create an instance of {@link ISSN }
     * 
     */
    public ISSN createISSN() {
        return new ISSN();
    }

    /**
     * Create an instance of {@link Language }
     * 
     */
    public Language createLanguage() {
        return new Language();
    }

    /**
     * Create an instance of {@link Subject }
     * 
     */
    public Subject createSubject() {
        return new Subject();
    }

    /**
     * Create an instance of {@link UDC }
     * 
     */
    public UDC createUDC() {
        return new UDC();
    }

    /**
     * Create an instance of {@link DDC }
     * 
     */
    public DDC createDDC() {
        return new DDC();
    }

    /**
     * Create an instance of {@link Keyword }
     * 
     */
    public Keyword createKeyword() {
        return new Keyword();
    }

    /**
     * Create an instance of {@link Accessibility }
     * 
     */
    public Accessibility createAccessibility() {
        return new Accessibility();
    }

    /**
     * Create an instance of {@link Notes }
     * 
     */
    public Notes createNotes() {
        return new Notes();
    }

    /**
     * Create an instance of {@link Annotation }
     * 
     */
    public Annotation createAnnotation() {
        return new Annotation();
    }

    /**
     * Create an instance of {@link MonographPage }
     * 
     */
    public MonographPage createMonographPage() {
        return new MonographPage();
    }

    /**
     * Create an instance of {@link PageNumber }
     * 
     */
    public PageNumber createPageNumber() {
        return new PageNumber();
    }

    /**
     * Create an instance of {@link PageRepresentation }
     * 
     */
    public PageRepresentation createPageRepresentation() {
        return new PageRepresentation();
    }

    /**
     * Create an instance of {@link PageImage }
     * 
     */
    public PageImage createPageImage() {
        return new PageImage();
    }

    /**
     * Create an instance of {@link PageText }
     * 
     */
    public PageText createPageText() {
        return new PageText();
    }

    /**
     * Create an instance of {@link TechnicalDescription }
     * 
     */
    public TechnicalDescription createTechnicalDescription() {
        return new TechnicalDescription();
    }

    /**
     * Create an instance of {@link ScanningDevice }
     * 
     */
    public ScanningDevice createScanningDevice() {
        return new ScanningDevice();
    }

    /**
     * Create an instance of {@link ScanningParameters }
     * 
     */
    public ScanningParameters createScanningParameters() {
        return new ScanningParameters();
    }

    /**
     * Create an instance of {@link OtherImagingInformation }
     * 
     */
    public OtherImagingInformation createOtherImagingInformation() {
        return new OtherImagingInformation();
    }

    /**
     * Create an instance of {@link MonographComponentPart }
     * 
     */
    public MonographComponentPart createMonographComponentPart() {
        return new MonographComponentPart();
    }

    /**
     * Create an instance of {@link MonographComponentPartIdentification }
     * 
     */
    public MonographComponentPartIdentification createMonographComponentPartIdentification() {
        return new MonographComponentPartIdentification();
    }

    /**
     * Create an instance of {@link PageReference }
     * 
     */
    public PageReference createPageReference() {
        return new PageReference();
    }

    /**
     * Create an instance of {@link Pages }
     * 
     */
    public Pages createPages() {
        return new Pages();
    }

    /**
     * Create an instance of {@link PageIndex }
     * 
     */
    public PageIndex createPageIndex() {
        return new PageIndex();
    }

    /**
     * Create an instance of {@link MonographComponentPartRepresentation }
     * 
     */
    public MonographComponentPartRepresentation createMonographComponentPartRepresentation() {
        return new MonographComponentPartRepresentation();
    }

    /**
     * Create an instance of {@link PartInImage }
     * 
     */
    public PartInImage createPartInImage() {
        return new PartInImage();
    }

    /**
     * Create an instance of {@link PartInText }
     * 
     */
    public PartInText createPartInText() {
        return new PartInText();
    }

    /**
     * Create an instance of {@link MonographUnit }
     * 
     */
    public MonographUnit createMonographUnit() {
        return new MonographUnit();
    }

    /**
     * Create an instance of {@link MonographUnitIdentification }
     * 
     */
    public MonographUnitIdentification createMonographUnitIdentification() {
        return new MonographUnitIdentification();
    }

    /**
     * Create an instance of {@link MonographUnitNumber }
     * 
     */
    public MonographUnitNumber createMonographUnitNumber() {
        return new MonographUnitNumber();
    }

    /**
     * Create an instance of {@link MonographUnitName }
     * 
     */
    public MonographUnitName createMonographUnitName() {
        return new MonographUnitName();
    }

    /**
     * Create an instance of {@link MonographUnitRepresentation }
     * 
     */
    public MonographUnitRepresentation createMonographUnitRepresentation() {
        return new MonographUnitRepresentation();
    }

    /**
     * Create an instance of {@link UnitImage }
     * 
     */
    public UnitImage createUnitImage() {
        return new UnitImage();
    }

    /**
     * Create an instance of {@link UnitText }
     * 
     */
    public UnitText createUnitText() {
        return new UnitText();
    }

}
