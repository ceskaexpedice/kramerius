//
// This file was generated by the Eclipse Implementation of JAXB, v2.3.6 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2025.10.02 at 09:48:41 AM CEST 
//


package com.qbizm.kramerius.imp.jaxb.periodical;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.qbizm.kramerius.imp.jaxb.periodical package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.qbizm.kramerius.imp.jaxb.periodical
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Periodical }
     * 
     */
    public Periodical createPeriodical() {
        return new Periodical();
    }

    /**
     * Create an instance of {@link UniqueIdentifier }
     * 
     */
    public UniqueIdentifier createUniqueIdentifier() {
        return new UniqueIdentifier();
    }

    /**
     * Create an instance of {@link UniqueIdentifierURNType }
     * 
     */
    public UniqueIdentifierURNType createUniqueIdentifierURNType() {
        return new UniqueIdentifierURNType();
    }

    /**
     * Create an instance of {@link UniqueIdentifierSICIType }
     * 
     */
    public UniqueIdentifierSICIType createUniqueIdentifierSICIType() {
        return new UniqueIdentifierSICIType();
    }

    /**
     * Create an instance of {@link PeriodicalOwner }
     * 
     */
    public PeriodicalOwner createPeriodicalOwner() {
        return new PeriodicalOwner();
    }

    /**
     * Create an instance of {@link Library }
     * 
     */
    public Library createLibrary() {
        return new Library();
    }

    /**
     * Create an instance of {@link ShelfNumber }
     * 
     */
    public ShelfNumber createShelfNumber() {
        return new ShelfNumber();
    }

    /**
     * Create an instance of {@link CoreBibliographicDescriptionPeriodical }
     * 
     */
    public CoreBibliographicDescriptionPeriodical createCoreBibliographicDescriptionPeriodical() {
        return new CoreBibliographicDescriptionPeriodical();
    }

    /**
     * Create an instance of {@link Title }
     * 
     */
    public Title createTitle() {
        return new Title();
    }

    /**
     * Create an instance of {@link MainTitle }
     * 
     */
    public MainTitle createMainTitle() {
        return new MainTitle();
    }

    /**
     * Create an instance of {@link SubTitle }
     * 
     */
    public SubTitle createSubTitle() {
        return new SubTitle();
    }

    /**
     * Create an instance of {@link ParallelTitle }
     * 
     */
    public ParallelTitle createParallelTitle() {
        return new ParallelTitle();
    }

    /**
     * Create an instance of {@link SortingTitle }
     * 
     */
    public SortingTitle createSortingTitle() {
        return new SortingTitle();
    }

    /**
     * Create an instance of {@link KeyTitle }
     * 
     */
    public KeyTitle createKeyTitle() {
        return new KeyTitle();
    }

    /**
     * Create an instance of {@link Coden }
     * 
     */
    public Coden createCoden() {
        return new Coden();
    }

    /**
     * Create an instance of {@link Creator }
     * 
     */
    public Creator createCreator() {
        return new Creator();
    }

    /**
     * Create an instance of {@link CreatorSurname }
     * 
     */
    public CreatorSurname createCreatorSurname() {
        return new CreatorSurname();
    }

    /**
     * Create an instance of {@link CreatorName }
     * 
     */
    public CreatorName createCreatorName() {
        return new CreatorName();
    }

    /**
     * Create an instance of {@link Contributor }
     * 
     */
    public Contributor createContributor() {
        return new Contributor();
    }

    /**
     * Create an instance of {@link ContributorSurname }
     * 
     */
    public ContributorSurname createContributorSurname() {
        return new ContributorSurname();
    }

    /**
     * Create an instance of {@link ContributorName }
     * 
     */
    public ContributorName createContributorName() {
        return new ContributorName();
    }

    /**
     * Create an instance of {@link GMD }
     * 
     */
    public GMD createGMD() {
        return new GMD();
    }

    /**
     * Create an instance of {@link Publisher }
     * 
     */
    public Publisher createPublisher() {
        return new Publisher();
    }

    /**
     * Create an instance of {@link PlaceOfPublication }
     * 
     */
    public PlaceOfPublication createPlaceOfPublication() {
        return new PlaceOfPublication();
    }

    /**
     * Create an instance of {@link PublisherName }
     * 
     */
    public PublisherName createPublisherName() {
        return new PublisherName();
    }

    /**
     * Create an instance of {@link DateOfPublication }
     * 
     */
    public DateOfPublication createDateOfPublication() {
        return new DateOfPublication();
    }

    /**
     * Create an instance of {@link Printer }
     * 
     */
    public Printer createPrinter() {
        return new Printer();
    }

    /**
     * Create an instance of {@link PlaceOfPrinting }
     * 
     */
    public PlaceOfPrinting createPlaceOfPrinting() {
        return new PlaceOfPrinting();
    }

    /**
     * Create an instance of {@link PrinterName }
     * 
     */
    public PrinterName createPrinterName() {
        return new PrinterName();
    }

    /**
     * Create an instance of {@link DateOfPrinting }
     * 
     */
    public DateOfPrinting createDateOfPrinting() {
        return new DateOfPrinting();
    }

    /**
     * Create an instance of {@link PhysicalDescription }
     * 
     */
    public PhysicalDescription createPhysicalDescription() {
        return new PhysicalDescription();
    }

    /**
     * Create an instance of {@link Size }
     * 
     */
    public Size createSize() {
        return new Size();
    }

    /**
     * Create an instance of {@link Extent }
     * 
     */
    public Extent createExtent() {
        return new Extent();
    }

    /**
     * Create an instance of {@link Technique }
     * 
     */
    public Technique createTechnique() {
        return new Technique();
    }

    /**
     * Create an instance of {@link Series }
     * 
     */
    public Series createSeries() {
        return new Series();
    }

    /**
     * Create an instance of {@link Language }
     * 
     */
    public Language createLanguage() {
        return new Language();
    }

    /**
     * Create an instance of {@link Subject }
     * 
     */
    public Subject createSubject() {
        return new Subject();
    }

    /**
     * Create an instance of {@link UDC }
     * 
     */
    public UDC createUDC() {
        return new UDC();
    }

    /**
     * Create an instance of {@link DDC }
     * 
     */
    public DDC createDDC() {
        return new DDC();
    }

    /**
     * Create an instance of {@link Keyword }
     * 
     */
    public Keyword createKeyword() {
        return new Keyword();
    }

    /**
     * Create an instance of {@link Accessibility }
     * 
     */
    public Accessibility createAccessibility() {
        return new Accessibility();
    }

    /**
     * Create an instance of {@link Notes }
     * 
     */
    public Notes createNotes() {
        return new Notes();
    }

    /**
     * Create an instance of {@link Annotation }
     * 
     */
    public Annotation createAnnotation() {
        return new Annotation();
    }

    /**
     * Create an instance of {@link DescriptionBasedIssue }
     * 
     */
    public DescriptionBasedIssue createDescriptionBasedIssue() {
        return new DescriptionBasedIssue();
    }

    /**
     * Create an instance of {@link ISSN }
     * 
     */
    public ISSN createISSN() {
        return new ISSN();
    }

    /**
     * Create an instance of {@link Periodicity }
     * 
     */
    public Periodicity createPeriodicity() {
        return new Periodicity();
    }

    /**
     * Create an instance of {@link RegularSupplement }
     * 
     */
    public RegularSupplement createRegularSupplement() {
        return new RegularSupplement();
    }

    /**
     * Create an instance of {@link SpecialSupplement }
     * 
     */
    public SpecialSupplement createSpecialSupplement() {
        return new SpecialSupplement();
    }

    /**
     * Create an instance of {@link PeriodicalVolume }
     * 
     */
    public PeriodicalVolume createPeriodicalVolume() {
        return new PeriodicalVolume();
    }

    /**
     * Create an instance of {@link PeriodicalVolumeIdentification }
     * 
     */
    public PeriodicalVolumeIdentification createPeriodicalVolumeIdentification() {
        return new PeriodicalVolumeIdentification();
    }

    /**
     * Create an instance of {@link PeriodicalVolumeNumber }
     * 
     */
    public PeriodicalVolumeNumber createPeriodicalVolumeNumber() {
        return new PeriodicalVolumeNumber();
    }

    /**
     * Create an instance of {@link PeriodicalVolumeNumberSorting }
     * 
     */
    public PeriodicalVolumeNumberSorting createPeriodicalVolumeNumberSorting() {
        return new PeriodicalVolumeNumberSorting();
    }

    /**
     * Create an instance of {@link PeriodicalVolumeDate }
     * 
     */
    public PeriodicalVolumeDate createPeriodicalVolumeDate() {
        return new PeriodicalVolumeDate();
    }

    /**
     * Create an instance of {@link Defects }
     * 
     */
    public Defects createDefects() {
        return new Defects();
    }

    /**
     * Create an instance of {@link PeriodicalInternalComponentPart }
     * 
     */
    public PeriodicalInternalComponentPart createPeriodicalInternalComponentPart() {
        return new PeriodicalInternalComponentPart();
    }

    /**
     * Create an instance of {@link InternalComponentPartIdNumber }
     * 
     */
    public InternalComponentPartIdNumber createInternalComponentPartIdNumber() {
        return new InternalComponentPartIdNumber();
    }

    /**
     * Create an instance of {@link PageReference }
     * 
     */
    public PageReference createPageReference() {
        return new PageReference();
    }

    /**
     * Create an instance of {@link PageNumber }
     * 
     */
    public PageNumber createPageNumber() {
        return new PageNumber();
    }

    /**
     * Create an instance of {@link Pages }
     * 
     */
    public Pages createPages() {
        return new Pages();
    }

    /**
     * Create an instance of {@link PageIndex }
     * 
     */
    public PageIndex createPageIndex() {
        return new PageIndex();
    }

    /**
     * Create an instance of {@link PeriodicalPage }
     * 
     */
    public PeriodicalPage createPeriodicalPage() {
        return new PeriodicalPage();
    }

    /**
     * Create an instance of {@link PageRepresentation }
     * 
     */
    public PageRepresentation createPageRepresentation() {
        return new PageRepresentation();
    }

    /**
     * Create an instance of {@link PageImage }
     * 
     */
    public PageImage createPageImage() {
        return new PageImage();
    }

    /**
     * Create an instance of {@link PageText }
     * 
     */
    public PageText createPageText() {
        return new PageText();
    }

    /**
     * Create an instance of {@link TechnicalDescription }
     * 
     */
    public TechnicalDescription createTechnicalDescription() {
        return new TechnicalDescription();
    }

    /**
     * Create an instance of {@link ScanningDevice }
     * 
     */
    public ScanningDevice createScanningDevice() {
        return new ScanningDevice();
    }

    /**
     * Create an instance of {@link ScanningParameters }
     * 
     */
    public ScanningParameters createScanningParameters() {
        return new ScanningParameters();
    }

    /**
     * Create an instance of {@link OtherImagingInformation }
     * 
     */
    public OtherImagingInformation createOtherImagingInformation() {
        return new OtherImagingInformation();
    }

    /**
     * Create an instance of {@link PeriodicalItem }
     * 
     */
    public PeriodicalItem createPeriodicalItem() {
        return new PeriodicalItem();
    }

    /**
     * Create an instance of {@link PeriodicalItemIdentification }
     * 
     */
    public PeriodicalItemIdentification createPeriodicalItemIdentification() {
        return new PeriodicalItemIdentification();
    }

    /**
     * Create an instance of {@link PeriodicalItemNumber }
     * 
     */
    public PeriodicalItemNumber createPeriodicalItemNumber() {
        return new PeriodicalItemNumber();
    }

    /**
     * Create an instance of {@link PeriodicalItemNumberSorting }
     * 
     */
    public PeriodicalItemNumberSorting createPeriodicalItemNumberSorting() {
        return new PeriodicalItemNumberSorting();
    }

    /**
     * Create an instance of {@link PeriodicalItemDate }
     * 
     */
    public PeriodicalItemDate createPeriodicalItemDate() {
        return new PeriodicalItemDate();
    }

    /**
     * Create an instance of {@link ItemRepresentation }
     * 
     */
    public ItemRepresentation createItemRepresentation() {
        return new ItemRepresentation();
    }

    /**
     * Create an instance of {@link ItemImage }
     * 
     */
    public ItemImage createItemImage() {
        return new ItemImage();
    }

    /**
     * Create an instance of {@link ItemText }
     * 
     */
    public ItemText createItemText() {
        return new ItemText();
    }

}
