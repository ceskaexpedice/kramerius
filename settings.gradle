pluginManagement {
    repositories {
		maven {
            url = uri("https://raw.githubusercontent.com/ceskaexpedice/process-platform/main/process-plugin-gradle/docs")
        }
        maven {
            url = uri("https://raw.githubusercontent.com/ceskaexpedice/process-platform/main/process-worker-plugin-gradle/docs")
        }
        gradlePluginPortal()
    }
}

// cdk bridge

include ':bridge'


include	'shared:common'
// disabled IT tests 
//include	'shared:common-intest'
include	'rest'
include	'search'
include 'folders'

include	'processes:import'
include	'processes:import-cmdtool'
// include	'processes:import-jaxb'
include	'processes:import-jaxb-periodical'
include 'processes:import-jaxb-monograph'
include	'processes:import-mets'
// include 'processes:mw-process'
// include	'processes:indexer'
include 'processes:solr-migration'
//include	'processes:static-export'
include 'processes:data-migration'
include 'processes:migration'
include 'processes:dnntflag'
include	'search-index'
// statistics resources
include 'processes:nkp-logs'
include 'processes:statistics'
include 'processes:sdnnt'
include 'processes:licenses'
include 'processes:collections-backup'


include 'security:authfilters'
include 'security:oauth'

// CDK Reharvest module
include 'processes:cdkreharvest'
include 'processes:cdkprocesses'

// test worker - only for testing (contains mock plugin
include 'nprocesses:test:worker'	

// mock plugin
include 'nprocesses:test:mock'	
include 'nprocesses:test:import'	



// filter property -DremoveProjs=projectA,projectB,..
rootProject.children.removeAll { project ->
	String filterProjs = System.getProperty("removeProjs");
	if (filterProjs != null) {
		String[] projs = filterProjs.split(",");
		return Arrays.asList(projs).indexOf(project.name) >= 0;
	} else return false;
}
